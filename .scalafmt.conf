version = 3.2.1

# needed since 3.1.0
# set to project version : scala212, scala213, scala3,..
runner.dialect = scala213

# exclude files from formatting
project.excludePaths = [ "glob:build.sbt" ]

# Default : maxColumn = 80
maxColumn = 200
# Default : assumeStandardLibraryStripMargin = false
assumeStandardLibraryStripMargin = true

continuationIndent.callSite = 2
continuationIndent.defnSite = 2
continuationIndent.withSiteRelativeToExtends = 0

binPack.parentConstructors = Always

align.preset = none
align.arrowEnumeratorGenerator = true
# related to assumeStandardLibraryStripMargin
align.stripMargin = true
align.openParenCallSite = false

# If true, applies config-style formatting:
# - if single-line formatting is impossible
# - if the source uses config-style and newlines.source = classic/keep
# - if other parameters force config-style (see below)
optIn.configStyleArguments = false
# applies to method calls;
# if positive, specifies the minimum character distance between the matching parentheses, excluding any whitespace
runner.optimizer.forceConfigStyleOnOffset = -1
# specifies the minimum number of arguments
runner.optimizer.forceConfigStyleMinArgCount = 100
danglingParentheses.defnSite = true
danglingParentheses.callSite = true

newlines.topLevelStatements = [before]
newlines.beforeMultiline = keep
newlines.beforeMultilineDef = keep
newlines.avoidForSimpleOverflow = [tooLong, punct]
newlines.avoidInResultType = true

rewrite.rules = [RedundantBraces, RedundantParens, SortModifiers, PreferCurlyFors]
rewrite.redundantBraces.stringInterpolation = true
rewrite.redundantBraces.generalExpressions = false
rewrite.redundantBraces.methodBodies = false
rewrite.redundantBraces.includeUnitMethods = false

trailingCommas = preserve

verticalMultiline.atDefnSite = true
verticalMultiline.arityThreshold = 7
verticalMultiline.newlineAfterOpenParen = true
// empty to allow dangling parens in classes and trait definition
verticalMultiline.excludeDanglingParens = []

spaces.afterSymbolicDefs = true

optIn.breaksInsideChains = true

optIn.selfAnnotationNewline = false
optIn.annotationNewlines = false

optIn.blankLineBeforeDocstring = true
unindentTopLevelOperators = true

rewriteTokens = {
  "⇒": "=>"
  "→": "->"
  "←": "<-"
}

rewrite.neverInfix.excludeFilters = [
  and
  min
  max
  until
  to
  by
  eq
  ne
  "should.*"
  "contain.*"
  "must.*"
  in
  ignore
  be
  taggedAs
  thrownBy
  synchronized
  have
  when
  size
  only
  noneOf
  oneElementOf
  noElementsOf
  atLeastOneElementOf
  atMostOneElementOf
  allElementsOf
  inOrderElementsOf
  theSameElementsAs
  theSameElementsInOrderAs
]
